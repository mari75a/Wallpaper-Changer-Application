/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wallpaperchanger;
import com.sun.jna.platform.win32.WinReg;
import com.sun.jna.platform.win32.Advapi32Util;
import com.formdev.flatlaf.intellijthemes.FlatDarkFlatIJTheme;
import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.win32.W32APIOptions;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.lang.reflect.Array;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

/**
 *
 * @author sange
 */
public class changer extends javax.swing.JFrame {
    

String path2=null;
 private static ImageIcon iconf[]=new ImageIcon[5];
 String  url=null;
 String imagePath = null;
 public interface User32 extends Library {
        User32 INSTANCE = Native.load("user32", User32.class, W32APIOptions.DEFAULT_OPTIONS);

        boolean SystemParametersInfo(int uiAction, int uiParam, String pvParam, int fWinIni);
    }
    /**
     * Creates new form changer
     */
    public changer() throws IOException {
       
        initComponents();
        String path=getCurrentWallpaper();
        setwallp(path);
        setrecent();
        
    }
    class UnsplashAPI {
    private static final String UNSPLASH_API_URL = "https://api.unsplash.com/photos/random?client_id=";
    private static final String ACCESS_KEY = "PbXmN8gzOA82U-5Li9anFCdmCc5DKt4eFMgsPRNV6PY"; // Replace with your Unsplash API access key

    private final OkHttpClient client = new OkHttpClient();
    private final Gson gson = new Gson();
public String getRandomImageUrl() throws IOException {
        String url = "https://api.unsplash.com/photos/random?client_id=" + ACCESS_KEY;
        Request request = new Request.Builder()
                .url(url)
                .build();

        try (Response response = client.newCall(request).execute()) {
            if (!response.isSuccessful()) {
                throw new IOException("Unexpected code " + response);
            }
            String jsonResponse = response.body().string();
            JsonObject jsonObject = JsonParser.parseString(jsonResponse).getAsJsonObject();
            return jsonObject.get("urls").getAsJsonObject().get("regular").getAsString();
        }
    }
    public BufferedImage getRandomImage() throws IOException {
        Request request = new Request.Builder()
                .url(UNSPLASH_API_URL + ACCESS_KEY)
                .build();

        try (Response response = client.newCall(request).execute()) {
            if (!response.isSuccessful()) throw new IOException("Unexpected code " + response);

            JsonObject jsonResponse = gson.fromJson(response.body().string(), JsonObject.class);
            String imageUrl = jsonResponse.get("urls").getAsJsonObject().get("regular").getAsString();

            try (InputStream in = new URL(imageUrl).openStream()) {
                return ImageIO.read(in);
            }
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Picture", "Solid Colour", "Slide show", "Windows Spotlight" }));

        jButton2.setText("Set wallpaper");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        jLabel5.setText("Recent");

        jLabel6.setFont(new java.awt.Font("Unispace", 0, 18)); // NOI18N
        jLabel6.setText("Set Wallpaper");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fill", "Fit", "Cover", "Center" }));

        jButton3.setText("Unsplash");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(103, 103, 103)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void setrecent(){
        
        try {
            BufferedImage b1=ImageIO.read(new File("C:\\Users\\sange\\Downloads\\wimg1.jpeg"));
            BufferedImage b2=ImageIO.read(new File("C:\\Users\\sange\\Downloads\\wimg2.jpg"));
            BufferedImage b3=ImageIO.read(new File("C:\\Users\\sange\\Downloads\\wimg3.jpeg"));
            Image img=b1.getScaledInstance(124, 107, Image.SCALE_SMOOTH);
            Image img2=b2.getScaledInstance(124, 107, Image.SCALE_SMOOTH);
            Image img3=b3.getScaledInstance(124, 107, Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(img);
            ImageIcon icon2=new ImageIcon(img2);
            ImageIcon icon3=new ImageIcon(img3);
            
            iconf[1]=icon;
            iconf[2]=icon2;
            iconf[3]=icon3;
             jLabel2.setIcon(icon);
             jLabel3.setIcon(icon2);
             jLabel4.setIcon(icon3);
             
            

            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(changer.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    private void setwallp(String path){
    
    
        try {
            BufferedImage b1=ImageIO.read(new File(path));
            Image img=b1.getScaledInstance(578, 317, Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(img);
             jLabel1.setIcon(icon);
             
            path2=path;

            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(changer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


    JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        File f=chooser.getSelectedFile(); 
        String path=f.getAbsolutePath();

        try {
            BufferedImage b1=ImageIO.read(new File(path));
            Image img=b1.getScaledInstance(578, 317, Image.SCALE_SMOOTH);
            Image img2=b1.getScaledInstance(124, 107, Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(img);
            ImageIcon icon2=new ImageIcon(img2);
             jLabel1.setIcon(icon);
             iconf[0]=icon2;
            path2=path;

            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(changer.class.getName()).log(Level.SEVERE, null, ex);
        }
                // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
   String saveDir = "C:\\Users\\sange\\OneDrive\\Pictures\\wallpapers"; 
           
    try {
        if(url!=null){
         path2 = downloadImage(url, saveDir);
        }
       
    } catch (IOException ex) {
        Logger.getLogger(changer.class.getName()).log(Level.SEVERE, null, ex);
    }

            
   ImageIcon iconm=(ImageIcon) jLabel1.getIcon();
   Image img=iconm.getImage();
  Image img2= img.getScaledInstance(124, 107, Image.SCALE_SMOOTH);
   ImageIcon iconmm=new ImageIcon(img2);
        
   
        ImageIcon icon4=(ImageIcon) jLabel4.getIcon();
        ImageIcon icon12=(ImageIcon) jLabel2.getIcon();
        
//        iconf[3]=iconf[2];
//        iconf[2]=iconf[1];
//        iconf[1]=iconf[0];
        iconf[0]=iconmm;
        jLabel4.setIcon(iconf[0]);
        jLabel2.setIcon(icon4);
        jLabel3.setIcon(icon12);
        
        changeWallpaper(path2);
        
   
            
    }//GEN-LAST:event_jButton2ActionPerformed
private static BufferedImage loadImage(String path) {
        BufferedImage img = null;
        try (InputStream is = changer.class.getClassLoader().getResourceAsStream(path)) {
            if (is != null) {
                img = ImageIO.read(is);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return img;
    }
    
    private static String downloadImage(String imageUrl, String saveDir) throws IOException {
        URL url = new URL(imageUrl);
        BufferedImage img = ImageIO.read(url);

        // Save the image to the specified directory
        String fileName = "unsplash_image.jpg"; // You can generate a unique name if needed
        File file = new File(saveDir + File.separator + fileName);
        ImageIO.write(img, "jpg", file);

        return file.getAbsolutePath(); // Return the path of the saved image
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        UnsplashAPI u=new UnsplashAPI();
        BufferedImage b1;
    try {
         url = u.getRandomImageUrl();
         b1 = ImageIO.read(new URL(url));
//        b1 = u.getRandomImage();
        Image img=b1.getScaledInstance(578, 317, Image.SCALE_SMOOTH);
        Image img2=b1.getScaledInstance(124, 107, Image.SCALE_SMOOTH);
            ImageIcon icon=new ImageIcon(img);
            ImageIcon icon2=new ImageIcon(img2);
            
            
            // TODO add your handling code here:
        if (b1 != null) {
            jLabel1.setIcon(icon);
        } else {
            JOptionPane.showMessageDialog(this, "Failed to fetch image from Unsplash.");
        }
    } catch (IOException ex) {
        Logger.getLogger(changer.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed
    private static void changeWallpaper(String imagePath) {
        // Constants for SystemParametersInfo function
        int SPI_SETDESKWALLPAPER = 0x0014;
        int SPIF_UPDATEINIFILE = 0x01;
        int SPIF_SENDCHANGE = 0x02;

        boolean result = changer.User32.INSTANCE.SystemParametersInfo(SPI_SETDESKWALLPAPER, 0, imagePath, SPIF_UPDATEINIFILE | SPIF_SENDCHANGE);
        if (!result) {
            System.out.println("Failed to set wallpaper.");
        }
    }
    private static String getCurrentWallpaper() throws IOException {
        String path=Advapi32Util.registryGetStringValue(
                WinReg.HKEY_CURRENT_USER,
                "Control Panel\\Desktop",
                "Wallpaper"
        );
        BufferedImage b1=ImageIO.read(new File(path));
            Image img=b1.getScaledInstance(124, 107, Image.SCALE_SMOOTH);
            
            ImageIcon icon=new ImageIcon(img);
            iconf[0]=icon;
            
        return Advapi32Util.registryGetStringValue(
                WinReg.HKEY_CURRENT_USER,
                "Control Panel\\Desktop",
                "Wallpaper"
        );
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        //</editor-fold>
     FlatDarkFlatIJTheme.setup();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new changer().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(changer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
